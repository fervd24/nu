// Mocks generated by Mockito 5.4.2 from annotations
// in nu_test1/test/features/shorten_link/presentation/bloc/short_url_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nu_test1/core/error/failures.dart' as _i6;
import 'package:nu_test1/features/shorten_link/domain/entities/short_url.dart'
    as _i7;
import 'package:nu_test1/features/shorten_link/domain/repositories/short_url_repository.dart'
    as _i2;
import 'package:nu_test1/features/shorten_link/domain/usecases/create_short_url.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeShortUrlRepository_0 extends _i1.SmartFake
    implements _i2.ShortUrlRepository {
  _FakeShortUrlRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CreateShortUrl].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateShortUrl extends _i1.Mock implements _i3.CreateShortUrl {
  MockCreateShortUrl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ShortUrlRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeShortUrlRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ShortUrlRepository);
  @override
  _i4.Future<_i5.Either<_i6.Failure, _i7.ShortUrl>?> call(_i3.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<_i5.Either<_i6.Failure, _i7.ShortUrl>?>.value(),
      ) as _i4.Future<_i5.Either<_i6.Failure, _i7.ShortUrl>?>);
}
